import "messages.thingml"

datatype TimerId<1> @type_checker "Integer" @c_type "uint8_t";
datatype Milliseconds<4> @type_checker "Integer" @c_type "uint32_t";

thing MedicalDevice includes GatewayDeviceMsgs {
	required port Gateway {
		sends GWAnnounce
	}

	message Start(Id : TimerId, Time : Milliseconds) @timer_start "true"
	message Timeout(Id : TimerId) @timeout "true"

	required port Timer {
		sends Start//, Cancel
		receives Timeout
	}

	property DeviceId : Short = /*COMBINATIONID*/ 0

	statechart init Idle {
		state Idle {
			on entry Timer!Start(1 as TimerId, 25 as Milliseconds)

			transition -> Idle event t:Timer?Timeout guard (t.Id == 1)
			action Gateway!GWAnnounce(DeviceId)
		}
	}
}

protocol Serial @serializer "binary" @serial_path_to_device "/dev/serial1";

protocol Timer;

configuration MedicalDevice {
	instance md : MedicalDevice

	connector md.Gateway over Serial
	connector md.Timer over Timer
}

//LANGUAGE posix
